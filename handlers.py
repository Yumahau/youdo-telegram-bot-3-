from aiogram import Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from db import add_executor, get_executors, add_task

def register_handlers(dp: Dispatcher):
    @dp.message(F.text == "/start")
    async def start_cmd(message: types.Message):
        kb = ReplyKeyboardMarkup(resize_keyboard=True)
        kb.add(KeyboardButton("üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"), KeyboardButton("üõ† –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –ö—Ç–æ —Ç—ã?", reply_markup=kb)

    @dp.message(F.text == "üõ† –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å")
    async def reg_exec(message: types.Message):
        await add_executor(message.from_user.id)
        await message.answer("‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.")

    @dp.message(F.text == "üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ")
    async def ask_task(message: types.Message):
        await message.answer("–û–ø–∏—à–∏ –∑–∞–¥–∞–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏:")

    @dp.message(lambda msg: len(msg.text) > 20 and any(w in msg.text for w in ["‚ÇΩ", "+7", "—Ç–µ–ª"]))
    async def save_task(message: types.Message):
        desc = message.text
        username = message.from_user.username or message.from_user.first_name
        await add_task(message.from_user.id, username, desc)

        btn = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton("üü¢ –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è", callback_data=f"reply_{message.from_user.id}")]]
        )
        for uid in await get_executors():
            try:
                await message.bot.send_message(uid, f"üì¢ –ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç @{username}:

{desc}", reply_markup=btn)
            except:
                continue
        await message.answer("‚úÖ –ó–∞–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º.")

    @dp.callback_query(F.data.startswith("reply_"))
    async def on_reply(callback: types.CallbackQuery):
        uid = int(callback.data.split("_")[1])
        username = callback.from_user.username or callback.from_user.first_name
        await callback.bot.send_message(uid, f"üì© @{username} –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è!")
        await callback.answer("‚úÖ –û—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")